class A{
	public static int a =10;
	public static void doA(){
		System.out.println("static");
	}
	private void doB(){
		System.out.println("private");
	}//동일 클래스내에 호출
	public void doc(){
		doB();
		System.out.println("public");
	}
}
public class Ex01 {
	public static void main(String[] args) {
		A.doA();//클래스 메소드 외부 접근
		System.out.println(A.a);//클래스 변수 외부 접근
		A a =new A();
		a.doc();
//		a.doB(); //private 선언된 메소드는 클래스 외부에서 직접 접근 불가
	}

}
static
10
private
public

String 클래스

String str= new String("simple string");


class Person{
	String name="name";
	int age= 20;
//	Person(String name, int age){
}
public class Ex02 {
	public static void main(String[] args) {
		String a = "String ";
		String b = new String("String b");
		
		Person c = new Person();
//		Person d = new Person(name="aa", age=20);
		
		System.out.println("a의 길이: "+a.length());
		int[] aa={1,2,3,4,5,6,7,8,9,10};
		System.out.println("aa의 길이: "+aa.length);//배열의 길이 구하는 함수와 문자열의 길이 구하는 함수의 차이

		System.out.println("a[0]"+a.charAt(0));
		System.out.println("a[1]"+a.charAt(1));
		System.out.println("a[2]"+a.charAt(2));
//		System.out.println("a[2]"+a.a[2]);
	}

}

a의 길이: 7
aa의 길이: 10
a[0]S
a[1]t
a[2]r

 
public class Ex03 {
	public static void main(String[] args) {
		String str1="simple string";
		String str2="simple string";
		
		String str3 = new String("simple string");
		String str4 = new String("simple string");
		
		if(str3.equals(str4))
			System.out.println("같은 값이다");
		
		if (str1==str2)
		{
			System.out.println("동일한 주소입니다");
		}
		if(str3==str4)
		{
			
		}
		else{
			System.out.println("다른 주소값");
		}
		}
}
같은 값이다
동일한 주소입니다
다른 주소값


public class Ex03 {
	public static void main(String[] args) {
		
		/*int *a = "string";
		 * a[0]='a' 불가능
		 *int b[20]="string";
		 *b[0]='a'가능
		 *c에서의 동일한 원리를 java에서도 적용되어 있다 
		 */
		String str1="simple string";
		String str2="simple string";
		
		String str3 = new String("simple string");
		String str4 = new String("simple string");
		
		if(str3.equals(str4))// 메소드 equal의 호출결과는 문자열이 같은면 true, 다르면 false를 반환
			System.out.println("같은 값이다");//두 인스턴스가 지니는 문자열이 같으므로 true 
		
		if (str1==str2)//참조변수의 참조 값을 비교한는 것이다
		{
			System.out.println("동일한 주소입니다");
		}
		if(str3==str4)
		{
			
		}
		else{
			System.out.println("다른 주소값");
		}
		}
}
같은 값이다
동일한 주소입니다
다른 주소값

public class Ex04 {
	public static void main(String[] args) {
		String str1 ="abc";
		String str2="def";
		
		String str3=str1.concat(str2); // str1+str2
		System.out.println("str3= "+ str3);
		String str4= "abcdef".concat(str3);
		System.out.println("str4= "+ str4);
		
		
		String a="andmnfkgjalkflrwafjrlkgjalsdasfdsfadsfadsfa";
		System.out.println(a.substring(20));
		System.out.println(a.substring(2,10));
		
	}

}
str3= abcdef
str4= abcdefabcdef
lkgjalsdasfdsfadsfadsfa
dmnfkgja

public class Ex06 {
	public static void main(String[] args) {
		String a = "990925-1012999";
		System.out.println(a.replace("-", " ")); // repalce 메소드를 이용해서 '-'를 ' '(공백)으로 대체
		
		//다른 방법
		char[] test = a.toCharArray();
		for(int i =0; i<test.length; i++){
			if(test[i]=='-'){
				test[i]=' ';
			}
		}
		String k = new String(test);
		System.out.println("k= "+k);
	}

}
public class Ex07 {
	public static void main(String[] args) {
		// delete 메소드로 '-'를 제거하고, insert 메소드로 ' '(공백) 추가하기
		StringBuilder s1= new StringBuilder("990925-1012999");
		s1.delete(6, 7);
		System.out.println(s1.toString());
		s1.insert(6, ' ');
		System.out.println(s1);
		System.out.println(s1.toString());
		
		//replace 메소드로 문자열 대체하기
		StringBuilder s2 = new StringBuilder("990925-1012999");
		s2.replace(6, 7, " ");
		System.out.println(s2.toString());
		System.out.println(s2);	
	}

}


public class Ex08 {
	public static void main(String[] args) {
		StringBuilder st = new StringBuilder("울산시"); //  문자열 "울산시"가 저장된  stringBuilder 메모리공간 생성
		st.append(" 서생면"); //문자열 내용을 추가
		System.out.println(st);
		System.out.println(st.toString());// 저장된 문자열의 내용을 담은 string 인스턴스가 생성 밒 반환
		String test = st.toString();
		System.out.println(test); // st2변수에 toString로 새 인스턴스가 생성되고  참조값을 반환
		
		st.insert(3, " 울주군"); //insert메소드로 인덱스 3번 자리에 문자열"울주군"을 추가
		System.out.println(st.toString());
		
		StringBuilder st2= new StringBuilder("해맞이로 1330 주택입니다");
		st2.replace(5, 9, "1375-24");
		System.out.println(st2.toString());
		String st3= st2.substring(13);
		System.out.println(st3);
//		st3.reverse();
//		System.out.println("주택입니다".reverse());//reverse 메소드는 저당된 문자열(StringBuilder에 저장된 문자열)을 뒤집는다
		st.reverse();	
		System.out.println(st);//StringBuilder 메모리공간을 가리키는 st변수로 호출한 reverse메소드로 저장된 문자열을 뒤집는다
		st.reverse(); //다시 원상태로 뒤집기
		String a = st.toString();
		String b = st2.toString();
//		String address = st.concat(st3);
		String address = a.concat(b);
		System.out.println("주소1: "+address);
		StringBuilder address2= new StringBuilder(st.append(st2).toString());
		System.out.println("주소2: "+address2);
		
		}

}
